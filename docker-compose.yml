# version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: employee_manager_db
    environment:
      POSTGRES_DB: employee_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init_db:/docker-entrypoint-initdb.d
    networks:
      - employee_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Employee Manager Application
  app:
    build: .
    container_name: employee_manager_app
    ports:
      - "8501:8501"
    environment:
      # Database Configuration
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: employee_db
      DB_USER: postgres
      DB_PASSWORD: postgres123

      # Application Configuration
      APP_USERNAME: admin
      APP_PASSWORD: aganitha@123

      # API Keys (replace with your actual keys)
      GEMINI_API_KEY: AIzaSyBx6zw9ZbXet_dW3pnx2f9I0qWKOnPq4yM

      # Streamlit Configuration
      STREAMLIT_SERVER_PORT: 8501
      STREAMLIT_SERVER_ADDRESS: 0.0.0.0
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - employee_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  employee_network:
    driver: bridge
